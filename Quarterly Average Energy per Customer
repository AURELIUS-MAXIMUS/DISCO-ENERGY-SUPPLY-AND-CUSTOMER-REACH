import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Ensure datetime format
df_long["Date"] = pd.to_datetime(df_long["Date"])

# Filter relevant metrics and exclude national aggregate
energy_df = df_long.query("Metric == 'ENERGY BILLED/ELECTRICITY SUPPLY (GWH)' and DisCo != 'DISCOS'").copy()
customer_df = df_long.query("Metric == 'TOTAL CUSTOMER NUMBER' and DisCo != 'DISCOS'").copy()

# Set datetime index and create 'Quarter' column
energy_df.set_index("Date", inplace=True)
customer_df.set_index("Date", inplace=True)
energy_df["Quarter"] = energy_df.index.to_period("Q")
customer_df["Quarter"] = customer_df.index.to_period("Q")

# Group by DisCo and Quarter, then compute averages
energy_quarterly = (
    energy_df.groupby(["DisCo", "Quarter"])["Value"]
    .mean()
    .reset_index()
    .rename(columns={"Value": "Energy"})
)

customer_quarterly = (
    customer_df.groupby(["DisCo", "Quarter"])["Value"]
    .mean()
    .reset_index()
    .rename(columns={"Value": "Customers"})
)

# Merge the two quarterly averages
merged = pd.merge(energy_quarterly, customer_quarterly, on=["DisCo", "Quarter"])

# Calculate energy per customer
merged["Energy per Customer"] = merged["Energy"] / merged["Customers"]

# Convert 'Quarter' to datetime for plotting (as first day of the quarter)
merged["Quarter"] = merged["Quarter"].dt.to_timestamp()

# Plotting
plt.figure(figsize=(16, 8))
sns.lineplot(data=merged, x="Quarter", y="Energy per Customer", hue="DisCo", marker="o")

plt.title("Quarterly Average Energy per Customer for 11 DISCOs")
plt.xlabel("Quarter")
plt.ylabel("Energy per Customer (GWh per Customer)")
plt.xticks(rotation=45)
plt.grid(True, linestyle='--', alpha=0.6)
plt.legend(title="DisCo", bbox_to_anchor=(1.02, 1), loc='upper left')
plt.tight_layout()
plt.show()
